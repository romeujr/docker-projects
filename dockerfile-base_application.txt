FROM debian:bookworm-slim AS base
ARG EXTRA_PACKAGES
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && \
    apt install -y \
    $EXTRA_PACKAGES \
    dos2unix && \
    adduser --disabled-password --gecos "" user && \
    echo "#!/bin/bash" >> /usr/local/bin/wait-for-interruption.sh && \
    echo "" >> /usr/local/bin/wait-for-interruption.sh && \
    echo "while sleep 1; do :; done" >> /usr/local/bin/wait-for-interruption.sh && \
    echo "" >> /usr/local/bin/wait-for-interruption.sh && \
    chmod 554 /usr/local/bin/wait-for-interruption.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/list-parameters.sh && \
    echo "" >> /usr/local/bin/list-parameters.sh && \
    echo "list=()" >> /usr/local/bin/list-parameters.sh && \
    echo "prefix=\$1" >> /usr/local/bin/list-parameters.sh && \
    echo "" >> /usr/local/bin/list-parameters.sh && \
    echo "if [ -z \"\$prefix\" ]; then" >> /usr/local/bin/list-parameters.sh && \
    echo "  echo \"First parameter must be the prefix.\"" >> /usr/local/bin/list-parameters.sh && \
    echo "  exit -1" >> /usr/local/bin/list-parameters.sh && \
    echo "fi" >> /usr/local/bin/list-parameters.sh && \
    echo "" >> /usr/local/bin/list-parameters.sh && \
    echo "for parameter in \"\$@\"" >> /usr/local/bin/list-parameters.sh && \
    echo "do" >> /usr/local/bin/list-parameters.sh && \
    echo "  if [[ \$parameter != \$prefix ]] && [[ \$parameter == \$prefix* ]]; then" >> /usr/local/bin/list-parameters.sh && \
    echo "    value=\"\${parameter#\$prefix}\"" >> /usr/local/bin/list-parameters.sh && \
    echo "    if [[ \$value != \$prefix* ]]; then" >> /usr/local/bin/list-parameters.sh && \
    echo "      list+=(\"\${parameter#\$prefix}\")" >> /usr/local/bin/list-parameters.sh && \
    echo "    fi" >> /usr/local/bin/list-parameters.sh && \
    echo "  fi" >> /usr/local/bin/list-parameters.sh && \
    echo "done" >> /usr/local/bin/list-parameters.sh && \
    echo "" >> /usr/local/bin/list-parameters.sh && \
    echo "for parameter in \"\${list[@]}\"" >> /usr/local/bin/list-parameters.sh && \
    echo "do" >> /usr/local/bin/list-parameters.sh && \
    echo "  echo \"\$parameter\"" >> /usr/local/bin/list-parameters.sh && \
    echo "done" >> /usr/local/bin/list-parameters.sh && \
    echo "" >> /usr/local/bin/list-parameters.sh && \
    chmod 554 /usr/local/bin/list-parameters.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "\$(/usr/local/bin/list-parameters.sh \"--\" \$* | while IFS= read -r value; do echo \"export \$value\"; done)" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "if [ -z \"\$path\" ]; then" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"ERROR: Missing path parameter (--path).\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  exit -1" >> /usr/local/bin/check-mounting-path.sh && \
    echo "fi" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "if [ ! -d \"\$path\" ]; then" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"ERROR: Path not found ('\$path').\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  exit -1" >> /usr/local/bin/check-mounting-path.sh && \
    echo "fi" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "if [ ! \"\$(grep \"\$path \" /proc/mounts)\" ]; then" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"ERROR: Path not mounted ('\$path').\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  echo \"\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  exit -1" >> /usr/local/bin/check-mounting-path.sh && \
    echo "fi" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "if [ -n \"\$user\" ] && [ -d \"\$path\" ]; then" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  chown -R \"\$user\" \"\$path\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  chgrp -R \"\$user\" \"\$path\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "fi" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    echo "if [ -n \"\$chmod\" ]; then" >> /usr/local/bin/check-mounting-path.sh && \
    echo "  chmod \$chmod \"\$path\"" >> /usr/local/bin/check-mounting-path.sh && \
    echo "fi" >> /usr/local/bin/check-mounting-path.sh && \
    echo "" >> /usr/local/bin/check-mounting-path.sh && \
    chmod 554 /usr/local/bin/check-mounting-path.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/user-run.sh && \
    echo "" >> /usr/local/bin/user-run.sh && \
    echo "\$(/usr/local/bin/list-parameters.sh \"--\" \$* | while IFS= read -r value; do echo \"export \$value\"; done)" >> /usr/local/bin/user-run.sh && \
    echo "" >> /usr/local/bin/user-run.sh && \
    echo "if [ -n \"\$user\" ] && [ -d \"\$path\" ]; then" >> /usr/local/bin/user-run.sh && \
    echo "  if [ -f \"\$path/run.sh\" ]; then" >> /usr/local/bin/user-run.sh && \
    echo "    chown -R \"\$user\" \"\$path\"" >> /usr/local/bin/user-run.sh && \
    echo "    chgrp -R \"\$user\" \"\$path\"" >> /usr/local/bin/user-run.sh && \
    echo "    find \"\$path\" -type d -exec chmod 0550 {} \;" >> /usr/local/bin/user-run.sh && \
    echo "    find \"\$path\" -type f -exec chmod 0440 {} \;" >> /usr/local/bin/user-run.sh && \
    echo "    chmod 550 \"\$path\"" >> /usr/local/bin/user-run.sh && \
    echo "    chmod 550 \"\$path/run.sh\"" >> /usr/local/bin/user-run.sh && \
    echo "    dos2unix \"\$path/run.sh\" >> /dev/null 2>&1" >> /usr/local/bin/user-run.sh && \
    echo "    su - \"\$user\" -c \"eval \\\"\\\$(awk -F= 'NR==FNR {env_vars[\\\$1]=\\\$0; next} {delete env_vars[\\\$1]} END {for (var in env_vars) print \\\"export \\\" env_vars[var]}' /var/root_env.txt <(set))\\\" && \$path/run.sh \$params\"" >> /usr/local/bin/user-run.sh && \
    echo "  fi" >> /usr/local/bin/user-run.sh && \
    echo "fi" >> /usr/local/bin/user-run.sh && \
    echo "" >> /usr/local/bin/user-run.sh && \
    chmod 554 /usr/local/bin/user-run.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/custom-run.sh && \
    echo "" >> /usr/local/bin/custom-run.sh && \
    echo "\$(/usr/local/bin/list-parameters.sh \"--\" \$* | while IFS= read -r value; do echo \"export \$value\"; done)" >> /usr/local/bin/custom-run.sh && \
    echo "" >> /usr/local/bin/custom-run.sh && \
    chmod 554 /usr/local/bin/custom-run.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/root-setup.sh && \
    echo "" >> /usr/local/bin/root-setup.sh && \
    echo "\$(/usr/local/bin/list-parameters.sh \"--\" \$* | while IFS= read -r value; do echo \"export \$value\"; done)" >> /usr/local/bin/root-setup.sh && \
    echo "" >> /usr/local/bin/root-setup.sh && \
    chmod 554 /usr/local/bin/root-setup.sh && \
    echo "#!/bin/bash" >> /usr/local/bin/main-run.sh && \
    echo "" >> /usr/local/bin/main-run.sh && \
    echo "env > /var/root_env.txt" >> /usr/local/bin/main-run.sh && \
    echo "" >> /usr/local/bin/main-run.sh && \
    echo "echo \"\"" >> /usr/local/bin/main-run.sh && \
    echo "/usr/local/bin/root-setup.sh \$*" >> /usr/local/bin/main-run.sh && \
    echo "if [ \$? -eq 0 ]; then" >> /usr/local/bin/main-run.sh && \
    echo "  echo \"\"" >> /usr/local/bin/main-run.sh && \
    echo "  /usr/local/bin/custom-run.sh \$*" >> /usr/local/bin/main-run.sh && \
    echo "  if [ \$? -eq 0 ]; then" >> /usr/local/bin/main-run.sh && \
    echo "    echo \"\"" >> /usr/local/bin/main-run.sh && \
    echo "    /usr/local/bin/user-run.sh --user=\"user\" --path=\"/app/user\" --params=\"\$*\"" >> /usr/local/bin/main-run.sh && \
    echo "    echo \"\"" >> /usr/local/bin/main-run.sh && \
    echo "  fi" >> /usr/local/bin/main-run.sh && \
    echo "fi" >> /usr/local/bin/main-run.sh && \
    echo "" >> /usr/local/bin/main-run.sh && \
    echo "for param in \"\$@\"; do" >> /usr/local/bin/main-run.sh && \
    echo "  if [ \"\$param\" == \"/wait\" ]; then" >> /usr/local/bin/main-run.sh && \
    echo "    /usr/local/bin/wait-for-interruption.sh" >> /usr/local/bin/main-run.sh && \
    echo "  fi" >> /usr/local/bin/main-run.sh && \
    echo "done" >> /usr/local/bin/main-run.sh && \
    echo "" >> /usr/local/bin/main-run.sh && \
    chmod 554 /usr/local/bin/main-run.sh && \
    rm -rf /tmp/* && \
    date +"%Y-%m-%d %H:%M:%S %Z" > /etc/build-date
ENTRYPOINT ["/usr/local/bin/main-run.sh"]
